{
    "openapi": "3.0.0",
    "info": {
        "title": "Organizations, Buildings, Activities API",
        "description": "API для управления организациями, зданиями и видами деятельности",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "Основной API сервер"
        }
    ],
    "paths": {
        "/api/activities/{activity}/organizations": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Получить организации по виду деятельности",
                "description": "Возвращает список всех организаций, связанных с указанным видом деятельности",
                "operationId": "getActivityOrganizations",
                "parameters": [
                    {
                        "name": "activity",
                        "in": "path",
                        "description": "ID вида деятельности",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/OrganizationMin"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Unauthorized"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Entity not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Internal server error"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/buildings/{building}/organizations": {
            "get": {
                "tags": [
                    "Buildings"
                ],
                "summary": "Получить организации в здании",
                "description": "Возвращает список всех организаций, находящихся в указанном здании",
                "operationId": "getBuildingOrganizations",
                "parameters": [
                    {
                        "name": "building",
                        "in": "path",
                        "description": "ID здания",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/OrganizationMin"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Unauthorized"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Entity not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Internal server error"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/organizations/{organization}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Данные по организации",
                "description": "Возвращает данные организации по ID",
                "operationId": "getOrganizationById",
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "description": "ID организации",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Unauthorized"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Entity not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/organizations/search/name": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Поиск организации по имени",
                "description": "Поиск организации по имени или части имени без учета регистра",
                "operationId": "searchOrganizationsByName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Имя организации или часть имени",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ОАО Компания"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Страница пагинации",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Organization"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/organizations/search-by-name?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/organizations/search-by-name?page=5"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/organizations/search-by-name?page=2"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/organizations/search-by-name?page=4"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "url": {
                                                                "type": "string",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "example": "pagination.previous"
                                                            },
                                                            "page": {
                                                                "type": "integer",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "active": {
                                                                "type": "boolean",
                                                                "example": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "example": [
                                                        {
                                                            "url": null,
                                                            "label": "pagination.previous",
                                                            "page": null,
                                                            "active": false
                                                        },
                                                        {
                                                            "url": "http://localhost:8080/api/organizations/search/name?page=1",
                                                            "label": "1",
                                                            "page": 1,
                                                            "active": true
                                                        },
                                                        {
                                                            "url": null,
                                                            "label": "pagination.next",
                                                            "page": null,
                                                            "active": false
                                                        }
                                                    ]
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://localhost:8080/api/organizations/search/name"
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 25
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Unauthorized"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/organizations/search/activity/{activity}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Поиск организаций по виду деятельности",
                "description": "Возвращает организации, связанные с указанным видом деятельности и всеми его дочерними видами",
                "operationId": "searchOrganizationsByActivity",
                "parameters": [
                    {
                        "name": "activity",
                        "in": "path",
                        "description": "ID вида деятельности",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Organization"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Unauthorized"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Entity not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Internal server error"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/organizations/search/geo": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Поиск организаций по географическим координатам",
                "description": "Поиск организаций в заданном радиусе или прямоугольной области. Необходимо указать либо все параметры для поиска по радиусу, либо все параметры для поиска по прямоугольной области.",
                "operationId": "searchOrganizationsByGeo",
                "parameters": [
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "Широта центра поиска (обязателен вместе с lng и radius)",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 55.755826
                        }
                    },
                    {
                        "name": "lng",
                        "in": "query",
                        "description": "Долгота центра поиска (обязателен вместе с lat и radius)",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 37.617634
                        }
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "Радиус поиска в метрах (обязателен вместе с lat и lng)",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "minimum": 0,
                            "example": 1000
                        }
                    },
                    {
                        "name": "min_lat",
                        "in": "query",
                        "description": "Минимальная широта прямоугольной области (обязателен вместе с min_lng, max_lat и max_lng)",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "maximum": 90,
                            "minimum": -90,
                            "example": 55.7
                        }
                    },
                    {
                        "name": "min_lng",
                        "in": "query",
                        "description": "Минимальная долгота прямоугольной области (обязателен вместе с min_lat, max_lat и max_lng)",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "maximum": 180,
                            "minimum": -180,
                            "example": 37.6
                        }
                    },
                    {
                        "name": "max_lat",
                        "in": "query",
                        "description": "Максимальная широта прямоугольной области (обязателен вместе с min_lat, min_lng и max_lng)",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "maximum": 90,
                            "minimum": -90,
                            "example": 55.8
                        }
                    },
                    {
                        "name": "max_lng",
                        "in": "query",
                        "description": "Максимальная долгота прямоугольной области (обязателен вместе с min_lat, min_lng и max_lat)",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "maximum": 180,
                            "minimum": -180,
                            "example": 37.7
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Building"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Необходимо указать либо все параметры для поиска по радиусу (lat, lng, radius), либо все параметры для поиска по прямоугольной области (min_lat, min_lng, max_lat, max_lng)"
                                                    }
                                                },
                                                "lat": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Широта обязательна при указании долготы и радиуса"
                                                    }
                                                },
                                                "min_lat": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Минимальная широта обязательна при указании границ области"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Unauthorized"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Internal server error"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Error": {
                "properties": {
                    "data": {
                        "properties": {
                            "error": {
                                "type": "string",
                                "example": "Какая-то ошибка"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "SearchByNameRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Название организации или часть названия без учета регистра",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "Название компании"
                    }
                },
                "type": "object"
            },
            "Activity": {
                "title": "Activity",
                "description": "Вид деятельности",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Еда"
                    }
                },
                "type": "object"
            },
            "BuildingMin": {
                "title": "BuildingMin",
                "description": "Минимальная информация о здании",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "address": {
                        "type": "string",
                        "example": "ул. Примерная, д. 123"
                    },
                    "location": {
                        "properties": {
                            "longitude": {
                                "type": "number",
                                "format": "float",
                                "example": 37.617634
                            },
                            "latitude": {
                                "type": "number",
                                "format": "float",
                                "example": 55.755826
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Building": {
                "title": "Building",
                "description": "Полная информация о здании",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BuildingMin"
                    },
                    {
                        "properties": {
                            "organizations": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OrganizationMin"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "OrganizationMin": {
                "title": "OrganizationMin",
                "description": "Минимальная информация об организации",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Название организации"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "+7 123 456-78-90"
                        }
                    },
                    "activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Activity"
                        }
                    }
                },
                "type": "object"
            },
            "Organization": {
                "title": "Organization",
                "description": "Полная информация об организации",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/OrganizationMin"
                    },
                    {
                        "properties": {
                            "building": {
                                "$ref": "#/components/schemas/BuildingMin"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "OrganizationPhone": {
                "title": "OrganizationPhone",
                "description": "Телефон организации",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "phone": {
                        "type": "string",
                        "example": "+7 123 456-78-90"
                    },
                    "organization_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "apiKeyAuth": {
                "type": "apiKey",
                "description": "API Key для аутентификации",
                "name": "X-API-KEY",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "apiKeyAuth": []
        }
    ],
    "tags": [
        {
            "name": "Organizations",
            "description": "Операции с организациями"
        },
        {
            "name": "Buildings",
            "description": "Операции со зданиями"
        },
        {
            "name": "Activities",
            "description": "Операции с видами деятельности"
        }
    ]
}